/*
shǎ崽 OrOrOrOrz
Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 6317 Accepted Submission(s): 1900


Problem Description
Acmer in HDU-ACM team are ambitious, especially shǎ崽, he can spend time in Internet bar doing problems overnight. So many girls want to meet and Orz him. But Orz him is not that easy.You must solve this problem first.
The problem is :
Give you a sequence of distinct integers, choose numbers as following : first choose the biggest, then smallest, then second biggest, second smallest etc. Until all the numbers was chosen .
For example, give you 1 2 3 4 5, you should output 5 1 4 2 3



Input
There are multiple test cases, each case begins with one integer N(1 <= N <= 10000), following N distinct integers.


Output
Output a sequence of distinct integers described above.


Sample Input
5
1 2 3 4 5

Sample Output
5 1 4 2 3

Author
WhereIsHeroFrom


Source
HDU女生专场公开赛——谁说女子不如男


Recommend
lcy


*/
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

struct MY_STRUCT
{
    string id;
    string start;
    string end;
};

bool cmp_inc ( MY_STRUCT a , MY_STRUCT b )
{
    return a.start < b.start;
}

bool cmp_desc ( MY_STRUCT a , MY_STRUCT b )
{
    return a.end > b.end;
}

int main ( )
{
    int N;
    while ( cin >> N )
    {
        vector<int> vec_my_value;
        for ( int i = 0; i < N; ++i )
        {
            int value = 0;
            cin >> value;

            vec_my_value.push_back ( value );
        }
        sort ( vec_my_value.begin ( ) , vec_my_value.end ( ) );
        for ( vector<int>::const_iterator it = vec_my_value.begin ( ) , it2 = vec_my_value.end ( ) - 1;
              it <= it2; ++it , --it2 )
        {
            if ( it != vec_my_value.begin ( ) )
            {
                cout << " ";
            }
            if ( it == it2 )
            {
                cout << *it;
            }
            else
            {
                cout << *it2 << " " << *it;
            }
        }
        cout << endl;
    }
    return 0;
}

